1. 
let not x =
match x with
false -> true
|true -> false;;

2.
let rec sumtorial n = 
match n with
1 -> 1
| _ -> n + sumtorial (n-1);;

3.
let rec power x n =
match n with
0 -> 1
| _ -> x * power x (n-1);;

4.
For all questions I found it easier to use pattern matching. It is easier to read if you understand the basic syntax.

5. 5

6. 
let islower c =
match c with
'a'..'z' -> true
| _ -> false;;

let isupper c = 
match c with
'A'..'Z' -> true
| _ -> false;;

